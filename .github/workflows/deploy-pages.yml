name: Deploy to GitHub Pages

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: 'pages'
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v4

            # Set up Node.js environment for building the React app
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'
                  cache-dependency-path: frontend/package-lock.json

            - name: Install dependencies
              run: |
                  cd frontend
                  npm ci

            - name: Build React app
              run: |
                  cd frontend
                  npm run build
              env:
                  # GitHub Pages configuration
                  PUBLIC_URL: /WishMaker

                  # Supabase configuration (optional - if not set, app uses mock API)
                  REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
                  REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
                  REACT_APP_SITE_URL: https://romcar.github.io/WishMaker

                  # Legacy backend API (for fallback)
                  REACT_APP_API_URL: https://your-backend-domain.com

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./frontend/build

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
