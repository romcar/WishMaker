# TODO: IMPROVEMENT - Enhance Docker Compose configuration
# ðŸŽ« Linear Ticket: https://linear.app/romcar/issue/ROM-11/production-infrastructure-and-devops-setup
# 1. Add environment-specific compose files (dev, prod, test)
# 2. Implement proper secret management with Docker secrets
# 3. Add health checks for all services
# 4. Configure resource limits and reservations
# 5. Add logging configuration and log rotation
# 6. Implement service scaling and load balancing
# 7. Add monitoring services (Prometheus, Grafana)
# 8. Configure SSL/TLS with Let's Encrypt
# 9. Add backup and restore services
# 10. Implement CI/CD pipeline integration

version: "3.8"

services:
    backend:
        build: ./backend
        container_name: wishmaker-backend
        # TODO: CRITICAL - Improve environment configuration
        # ðŸŽ« Linear Ticket: https://linear.app/romcar/issue/ROM-11/production-infrastructure-and-devops-setup
        # 1. Use Docker secrets for sensitive data (passwords, keys)
        # 2. Add environment-specific variables
        # 3. Implement proper JWT secret management
        # 4. Add SSL/TLS configuration variables
        # 5. Configure external service URLs (Redis, email, etc.)
        environment:
            DATABASE_URL: postgres://postgres:postgres@postgres:5432/wishmaker
            DB_HOST: postgres
            DB_PORT: 5432
            DB_NAME: wishmaker
            DB_USER: postgres
            DB_PASSWORD: postgres
            JWT_SECRET: "your-super-secret-jwt-key-change-in-production-use-crypto-randomBytes-32-toString-hex"
            PORT: 8000
        ports:
            - "8000:8000"
        depends_on:
            postgres:
                condition: service_healthy
    frontend:
        build: ./frontend
        container_name: wishmaker-frontend
        environment:
            REACT_APP_API_URL: http://localhost:8000
            PORT: 3000
        ports:
            - "3000:3000"
        depends_on:
            - backend
    postgres:
        image: postgres:16-alpine
        container_name: wishmaker-db
        environment:
            POSTGRES_DB: wishmaker
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./backend/src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./backend/src/db/auth_migration.sql:/docker-entrypoint-initdb.d/auth_migration.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
volumes:
    postgres_data:
